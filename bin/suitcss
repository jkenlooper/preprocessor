#!/usr/bin/env node

var fs = require('fs');
var exists = fs.existsSync;
var logger = require('./logger');
var suitcss = require('..');
var rework = require('rework');
var path = require('path');
var resolve = path.resolve;
var program = require('commander');
var read = require('read-file-stdin');
var watch = require('node-watch');
var write = require('write-file-stdout');

/**
 * Usage.
 */

program
  .version(require('../package.json').version)
  .usage('[<input>] [<output>]')
  .option('-c, --compress', 'compress output')
  .option('-i, --import-root [path]', 'the root directory for imported css files', '')
  .option('-v, --verbose', 'log verbose output for debugging')
  .option('-d, --depends', 'show list of imported css files')
  .option('-w, --watch', 'watch the input file for changes');

/**
 * Examples.
 */

program.on('--help', function () {
  console.log('  Examples:');
  console.log();
  console.log('    # pass an input and output file:');
  console.log('    $ suitcss input.css output.css');
  console.log();
  console.log('    # configure the import root directory:');
  console.log('    $ suitcss --import-root src/css input.css output.css');
  console.log();
  console.log('    # get a list of css files imported:');
  console.log('    $ suitcss --depends input.css');
  console.log();
  console.log('    # watch the input file for changes:');
  console.log('    $ suitcss --watch input.css output.css');
  console.log();
  console.log('    # unix-style piping to stdin and stdout:');
  console.log('    $ cat input.css | suitcss | grep background-color');
  console.log();
});

/**
 * Parse.
 */

program.parse(process.argv);

/**
 * Settings.
 */

var input = program.args[0] ? resolve(program.args[0]) : null;
var output = program.args[1] ? resolve(program.args[1]) : null;
var importRoot = program.importRoot;
var verbose = program.verbose;
var depends = program.depends;
var regen = program.watch && input && output;

/**
 * Exists?
 */

if (input && !exists(input)) logger.fatal('not found', input);

/**
 * Run.
 */

run();

/**
 * Watch?
 */

if (regen) {
  watch(input, run);
  if (verbose) logger.log('watch', input);
}

/**
 * Run for the given input and output.
 */

function run () {
  read(input, function (err, buffer) {
    if (err) logger.throw(err);
    var css = buffer.toString();

    var opts = { compress: program.compress, dir: importRoot, source: input, path: path.dirname(input) };
    opts.depends = [];

    try {
      css = suitcss(css, opts);
    } catch (e) {
      e.css = css;
      logger.throw(e);
    }

    if (!depends) write(output, css + '\n');
    if (verbose && output) logger.log('write', output);

    if (depends) {
      if (output) write(output, css + '\n');

      // Write to stdout a list of css files that the input css file depends on.
      console.log(opts.depends.join('\n')+'\n');
    }
  });
}
